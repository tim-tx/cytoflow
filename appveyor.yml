environment:

  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    WITH_COMPILER: "cmd /E:ON /V:ON /C .\\packaging\\appveyor\\run_with_compiler.cmd"

  matrix:

    # Pre-installed Python versions, which Appveyor may upgrade to
    # a later point release.

    - PYTHON: "C:\\Miniconda35"
      PYTHON_VERSION: "3.5.x"   # currently 3.5.2
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Miniconda35-x64"
      PYTHON_VERSION: "3.5.x"       # currently 3.5.2
      PYTHON_ARCH: "64"

init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"
  - ps: Update-AppveyorBuild -Version "$($env:appveyor_repo_commit.substring(0,7))"

install:
  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""

  - ECHO "Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  
  # install swig
  - choco install swig --version 3.0.2 --yes --limit-output

  # Install the build and runtime dependencies of the project.
  - conda update --yes conda
  - conda create --yes --quiet --name=py35 python=3.5
  - activate py35
  
  # Check again for the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  
  # - conda install --yes --quiet mkl=2017.0.3-0  # new version of mkl has bad interaction with numpy
  - conda install --yes --quiet --file=packaging\conda-requirements.txt
  - conda install --yes --quiet msvc_runtime pip mock
  - pip.exe install nose2 sphinx
  - pip.exe install "pyinstaller==3.3.1"
  
  # the PyYAML wheels are busted.  install from source instead
  - pip.exe install --no-use-wheel pyyaml

  - "%WITH_COMPILER% python setup.py develop"

build: off

test_script:
  - "nose2 -c packaging\\nose2.cfg -s cytoflow\\tests"

after_test:
  - "python setup.py bdist_wheel bdist_wininst"
  - "python setup.py build_sphinx -b embedded_help"
  - "pyinstaller packaging/pyinstaller.spec"
  - "pyi-archive_viewer -l dist\\cytoflow.exe"
  - "move dist\\cytoflow.exe dist\\cytoflow-%PYTHON_ARCH%.exe"
  # - "IF %PYTHON_ARCH% EQU 32 move build\\lib.win32-3.5\\cytoflow\\utility\\logicle_ext\\_Logicle.pyd dist\\_Logicle-32.pyd"
  # - "IF %PYTHON_ARCH% EQU 64 move build\\lib.win-amd64-3.5\\cytoflow\\utility\\logicle_ext\\_Logicle.pyd dist\\_Logicle-64.pyd"

artifacts:
  - path: dist\*.*

deploy:
  - provider: GitHub
    description: 'Cytoflow release'
    auth_token:
      secure: VVuhKeMWCRbcFWTVdrIbOuKkgnOqsQnCF3ZXl9SsE5YiCmuuYP1YxmII2ZuAp0lv
    draft: false
    prerelease: false
    force_update: true
    on:
      appveyor_repo_tag: true        # deploy on tag push only   


  - provider: BinTray
    username: bpteague
    api_key:
      secure: BLgrF3vno40XZMvXZ+DGzxeO8xzQJP1Y/ndUVPEycNlNB2puWDGdPDJ8d4DxDTEj
    subject: bpteague
    repo: cytoflow
    package: cytoflow
    version: latest
    publish: true
    override: true
    explode: false
    on:
        branch: master

  - provider: BinTray
    username: bpteague
    api_key:
      secure: BLgrF3vno40XZMvXZ+DGzxeO8xzQJP1Y/ndUVPEycNlNB2puWDGdPDJ8d4DxDTEj
    subject: bpteague
    repo: cytoflow
    package: cytoflow
    version: latest
    publish: true
    override: true
    explode: false
    on:
        branch: packaging
        
  - provider: BinTray
    username: bpteague
    api_key:
      secure: BLgrF3vno40XZMvXZ+DGzxeO8xzQJP1Y/ndUVPEycNlNB2puWDGdPDJ8d4DxDTEj
    subject: bpteague
    repo: cytoflow
    package: cytoflow
    version: latest
    publish: true
    override: true
    explode: false
    on:
        branch: python3
